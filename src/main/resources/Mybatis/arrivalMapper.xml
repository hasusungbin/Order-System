<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ArrivalDAO">
	<resultMap id="ArrivalResultMap" type="arrival.Arrival">
		<result property="arrivalName" column="arrivalName"/>
		<result property="arrivalCities" column="arrivalCities"/>
		<result property="arrivalTown" column="arrivalTown"/>
		<result property="arrivalDetailedAddress" column="arrivalDetailedAddress"/>
		<result property="arrivalManager" column="arrivalManager"/>
		<result property="arrivalManagerPhoneNum" column="arrivalManagerPhoneNum"/>
	</resultMap>
	
	<insert id="insertArrival" parameterType="arrival.Arrival">
    INSERT INTO arrival (
        arrivalName,
        arrivalCities,
        arrivalTown,
        arrivalDetailedAddress,
        arrivalManager,
        arrivalManagerPhoneNum,
        etc,
        regDate,
        userCompany
    )
    VALUES (
        #{arrivalName},
        #{arrivalCities},
        <if test="arrivalTown != null">
            #{arrivalTown}
        </if>
        <if test="arrivalTown == null">
            NULL
        </if>,
        <if test="arrivalDetailedAddress != null">
            #{arrivalDetailedAddress}
        </if>
        <if test="arrivalDetailedAddress == null">
            NULL
        </if>,
        <if test="arrivalManager != null">
            #{arrivalManager}
        </if>
        <if test="arrivalManager == null">
            NULL
        </if>,
        <if test="arrivalManagerPhoneNum != null">
            #{arrivalManagerPhoneNum}
        </if>
        <if test="arrivalManagerPhoneNum == null">
            NULL
        </if>,
        <if test="etc != null">
            #{etc}
        </if>
        <if test="etc == null">
            NULL
        </if>,
        NOW(),
        #{userCompany}
    )
</insert>

	<select id="getArrivalsByCompany" parameterType="map" resultType="arrival.Arrival">
        SELECT *
        FROM arrival
        <where>
            <if test="userType != 'admin'">
                userCompany = #{userCompany}
            </if>
        </where>
        ORDER BY arrivalID DESC
    </select>
	
	<select id="getArrivalByName" resultType="arrival.Arrival">
        SELECT * FROM arrival WHERE arrivalName = #{arrivalName}
    </select>
	
	<update id="updateArrival">
        UPDATE arrival
        <set>
			arrivalName = #{arrivalName},
			arrivalCities = #{arrivalCities},
			arrivalTown = #{arrivalTown},
			arrivalDetailedAddress = #{arrivalDetailedAddress},
			arrivalManager = #{arrivalManager},
			arrivalManagerPhoneNum = #{arrivalManagerPhoneNum},
			<if test="etc != null"> etc = #{etc}, </if>
		</set>
        WHERE arrivalID = #{arrivalID}
    </update>
	
	<delete id="deleteArrival">
        DELETE FROM arrival WHERE arrivalID IN 
        <foreach item="arrivalID" collection="list" open="(" separator="," close=")">
            #{arrivalID}
        </foreach>
    </delete>
	
	<select id="getArrivalList" resultType="arrival.Arrival">
        SELECT * 
        FROM arrival
        <where>
			<if test="userType != 'admin'">
				userCompany = #{userCompany}
			</if>
		</where>
		
    </select>

    <!-- 도착지 ID로 도착지 정보 가져오기 -->
    <select id="selectArrivalById" resultType="arrival.Arrival">
        SELECT * 
        FROM arrival
        WHERE orderNumber = #{orderNumber}
    </select>
	
	<select id="getSearchArrivalByCompany" resultType="arrival.Arrival">
        SELECT *
        FROM arrival
        <where>
            <if test="userType != 'admin'">
                userCompany = #{userCompany}
            </if>
            <if test="arrivalName != null and arrivalName != ''">
                AND arrivalName LIKE CONCAT('%', #{arrivalName}, '%')
            </if>
            <if test="arrivalCities != null and arrivalCities != ''">
                AND arrivalCities LIKE CONCAT('%', #{arrivalCities}, '%')
            </if>
            <if test="arrivalTown != null and arrivalTown != ''">
                AND arrivalTown LIKE CONCAT('%', #{arrivalTown}, '%')
            </if>
            <if test="arrivalManager != null and arrivalManager != ''">
                AND arrivalManager LIKE CONCAT('%', #{arrivalManager}, '%')
            </if>
        </where>
        ORDER BY arrivalID DESC
    </select>
	
	<select id="checkDuplicateArrival" resultType="int">
        SELECT COUNT(*)
        FROM arrival
        WHERE arrivalName = #{arrivalName}
    </select>

    <!-- 중복이 없으면 INSERT -->
    <insert id="insertOrderArrival" parameterType="arrival.Arrival">
        INSERT INTO arrival (
            arrivalName, arrivalCities, arrivalTown, arrivalDetailedAddress,
            arrivalManager, arrivalManagerPhoneNum, userCompany
        )
        VALUES (
            #{arrivalName}, #{arrivalCities}, #{arrivalTown}, #{arrivalDetailedAddress},
            #{arrivalManager}, #{arrivalManagerPhoneNum}, #{userCompany}
        )
    </insert>
</mapper>
